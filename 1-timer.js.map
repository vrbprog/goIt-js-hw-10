{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/themes/material_blue.css\"\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet  deadLine = null;\n\n  iziToast.settings({\n      timeout: 3000, // default timeout\n      resetOnHover: true,\n      // icon: 'fa fa-user', // icon class\n      transitionIn: 'flipInX',\n      transitionOut: 'flipOutX',\n      position: 'topCenter'\n});\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    deadLine = selectedDates[0];\n    validateSelectDate(selectedDates[0]);\n  },\n};\n\nflatpickr(\"input#datetime-picker\", options);\n\nconst startButton = document.querySelector(\"button[data-start]\");\nconst selectDate = document.querySelector(\"input#datetime-picker\");\n\nfunction validateSelectDate(date) {\n  if (date.getTime() < Date.now()) {\n    iziToast.error({ title: 'Error', message: 'Please choose a date in the future' });\n    startButton.disabled = true;\n  }\n  else {\n    //iziToast.info({ position: \"center\", title: 'Hello', message: 'iziToast.info()' });\n    startButton.disabled = false;\n  }\n  console.log(date);\n}\n\nconst timerWidget = {};\ntimerWidget.days = document.querySelector(\".value[data-days]\");\ntimerWidget.hours = document.querySelector(\".value[data-hours]\");\ntimerWidget.minutes = document.querySelector(\".value[data-minutes]\");\ntimerWidget.seconds = document.querySelector(\".value[data-seconds]\");\n\nstartButton.disabled = true;\nstartButton.addEventListener('click', () => {\n  if (deadLine.getTime() > Date.now()) {\n    selectDate.disabled = true;\n    startButton.disabled = true;\n    let counter = deadLine.getTime() - Date.now();\n    const delay = counter % 1000;\n    counter -= delay;\n    updateTimerValues(timerWidget, counter);\n    setTimeout(() => {\n      if (counter > 0) {\n        const timeinterval = setInterval(() => {\n          if ((counter - 1000) == 0) {\n            clearInterval(timeinterval);\n            iziToast.info({ position: \"center\", title: 'Finished', message: 'Event happened' });\n            updateTimerValues(timerWidget, 0);\n            selectDate.disabled = false;\n          } else {\n            counter -= 1000;\n            updateTimerValues(timerWidget, counter);\n          }\n        }, 1000);\n      } else {\n        iziToast.info({ position: \"center\", title: 'Finished', message: 'Event happened' });\n        startButton.disabled = false;\n      }\n    }, delay);\n  } else {\n    iziToast.info({ position: \"center\", title: 'Finished', message: 'Event happened' });\n    startButton.disabled = false;\n  }\n});\n\nfunction updateTimerValues(timerWidget, counter)\n{\n    const { days, hours, minutes, seconds } = timerWidget;\n    seconds.textContent = addLeadingZero(convertMs(counter).seconds);\n    minutes.textContent = addLeadingZero(convertMs(counter).minutes);\n    hours.textContent = addLeadingZero(convertMs(counter).hours);\n    days.textContent = addLeadingZero(convertMs(counter).days);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  if (value > 9) return value;\n  return value.toString().padStart(2, '0');\n}\n\n\n"],"names":["deadLine","iziToast","options","selectedDates","validateSelectDate","flatpickr","startButton","selectDate","date","timerWidget","counter","delay","updateTimerValues","timeinterval","days","hours","minutes","seconds","addLeadingZero","convertMs","ms","value"],"mappings":"+IAOA,IAAKA,EAAW,KAEdC,EAAS,SAAS,CACd,QAAS,IACT,aAAc,GAEd,aAAc,UACd,cAAe,WACf,SAAU,WAChB,CAAC,EAED,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAWG,EAAc,CAAC,EAC1BC,EAAmBD,EAAc,CAAC,CAAC,CACpC,CACH,EAEAE,EAAU,wBAAyBH,CAAO,EAE1C,MAAMI,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAa,SAAS,cAAc,uBAAuB,EAEjE,SAASH,EAAmBI,EAAM,CAC5BA,EAAK,QAAO,EAAK,KAAK,IAAG,GAC3BP,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,EAChFK,EAAY,SAAW,IAIvBA,EAAY,SAAW,GAEzB,QAAQ,IAAIE,CAAI,CAClB,CAEA,MAAMC,EAAc,CAAA,EACpBA,EAAY,KAAO,SAAS,cAAc,mBAAmB,EAC7DA,EAAY,MAAQ,SAAS,cAAc,oBAAoB,EAC/DA,EAAY,QAAU,SAAS,cAAc,sBAAsB,EACnEA,EAAY,QAAU,SAAS,cAAc,sBAAsB,EAEnEH,EAAY,SAAW,GACvBA,EAAY,iBAAiB,QAAS,IAAM,CAC1C,GAAIN,EAAS,QAAO,EAAK,KAAK,IAAG,EAAI,CACnCO,EAAW,SAAW,GACtBD,EAAY,SAAW,GACvB,IAAII,EAAUV,EAAS,QAAS,EAAG,KAAK,IAAG,EAC3C,MAAMW,EAAQD,EAAU,IACxBA,GAAWC,EACXC,EAAkBH,EAAaC,CAAO,EACtC,WAAW,IAAM,CACf,GAAIA,EAAU,EAAG,CACf,MAAMG,EAAe,YAAY,IAAM,CAChCH,EAAU,KAAS,GACtB,cAAcG,CAAY,EAC1BZ,EAAS,KAAK,CAAE,SAAU,SAAU,MAAO,WAAY,QAAS,gBAAgB,CAAE,EAClFW,EAAkBH,EAAa,CAAC,EAChCF,EAAW,SAAW,KAEtBG,GAAW,IACXE,EAAkBH,EAAaC,CAAO,EAEzC,EAAE,GAAI,CACf,MACQT,EAAS,KAAK,CAAE,SAAU,SAAU,MAAO,WAAY,QAAS,gBAAgB,CAAE,EAClFK,EAAY,SAAW,EAE1B,EAAEK,CAAK,CACZ,MACIV,EAAS,KAAK,CAAE,SAAU,SAAU,MAAO,WAAY,QAAS,gBAAgB,CAAE,EAClFK,EAAY,SAAW,EAE3B,CAAC,EAED,SAASM,EAAkBH,EAAaC,EACxC,CACI,KAAM,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKR,EAC1CQ,EAAQ,YAAcC,EAAeC,EAAUT,CAAO,EAAE,OAAO,EAC/DM,EAAQ,YAAcE,EAAeC,EAAUT,CAAO,EAAE,OAAO,EAC/DK,EAAM,YAAcG,EAAeC,EAAUT,CAAO,EAAE,KAAK,EAC3DI,EAAK,YAAcI,EAAeC,EAAUT,CAAO,EAAE,IAAI,CAC7D,CAEA,SAASS,EAAUC,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeG,EAAO,CAC7B,OAAIA,EAAQ,EAAUA,EACfA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}